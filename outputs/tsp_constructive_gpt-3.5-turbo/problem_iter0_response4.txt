Code description: In this code, I will implement the Random Selection heuristic for the Traveling Salesman Problem (TSP). This heuristic randomly selects the next node to visit from the set of unvisited nodes.

```python
import numpy as np
import random

def select_next_node(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """
    Select the next node to visit from the unvisited nodes using Random Selection heuristic.
    
    Parameters
    ----------
    current_node : int
        The current node.
    destination_node : int
        The destination node to return to.
    unvisited_nodes : set
        The set of unvisited nodes.
    distance_matrix : np.ndarray
        The distance matrix of shape (n_nodes, n_nodes).
    
    Returns
    -------
    nxt_node : int
        The next node to visit.
    """
    
    # Select a random node from the set of unvisited nodes
    nxt_node = random.choice(list(unvisited_nodes))
    
    return nxt_node
```
This code selects the next node to visit at random from the set of unvisited nodes. The random.choice() function is used to randomly select a node from the given set. This heuristic does not consider any information about the distance between nodes and simply selects a random node each time.
