Code description: 
The selecting-next-node function uses a probabilistic approach to choose the next node to visit. It calculates the probability of visiting each unvisited node based on the distances between the current node and the unvisited nodes. The node with the highest probability is selected as the next node to visit.

```python
import numpy as np

def select_next_node(current_node: int, destination_node: int, unvisited_nodes: set, distance_matrix: np.ndarray) -> int:
    """
    Select the next node to visit from the unvisited nodes using a probabilistic approach.
    
    Parameters
    ----------
    current_node : int
        The current node.
    destination_node : int
        The destination node to return to.
    unvisited_nodes : set
        The set of unvisited nodes.
    distance_matrix : np.ndarray
        The distance matrix of shape (n_nodes, n_nodes).
    
    Returns
    -------
    nxt_node : int
        The next node to visit.
    """
    # Calculate the distances between the current node and the unvisited nodes
    distances = distance_matrix[current_node, list(unvisited_nodes)]
    
    # Calculate the inverse of the distances
    inv_distances = 1 / distances
    
    # Calculate the probabilities of visiting each unvisited node
    probabilities = inv_distances / np.sum(inv_distances)
    
    # Select the next node based on the probabilities
    nxt_node = list(unvisited_nodes)[np.argmax(probabilities)]
    
    return nxt_node
```

