Code description: 
The scoring function for the Capacitated Vehicle Routing Problem (CVRP) is based on a simple heuristic that takes into account both the distance between nodes and the demand of nodes. The heuristic score for an edge is calculated as the ratio of the demand of the destination node to the distance between the source and destination nodes. Since larger distances and higher demands are generally less desirable, the heuristic score is calculated as the inverse of the ratio. The heuristic score is set to zero for edges where the demand exceeds the vehicle capacity.

```python
import numpy as np

def scoring_function(distance_matrix: np.ndarray, demands: np.ndarray, CAPACITY: int) -> np.ndarray:
    n_nodes = distance_matrix.shape[0]
    
    # Initialize heuristics matrix
    heuristics = np.zeros((n_nodes, n_nodes))
    
    # Calculate heuristic measures for each edge
    for i in range(n_nodes):
        for j in range(i+1, n_nodes):
            distance = distance_matrix[i, j]
            demand = demands[j]
            
            # Calculate heuristic score
            if demand <= CAPACITY:
                score = demand / distance
            else:
                score = 0
            
            # Update heuristics matrix
            heuristics[i, j] = score
    
    # Symmetrically set heuristics for the lower triangle of the matrix
    heuristics += np.tril(heuristics.T, -1)
    
    return heuristics
```

