### Algorithm ###

Code description: In this improved scoring function, I will use the existing node centrality measure from Algorithm 1, but instead of penalizing edges based on the number of connections as in Algorithm 2, I will penalize edges based on the ratio of their distance to the average distance in the distance matrix. This ratio will be multiplied by the centrality measure to obtain the final heuristic measure. The idea is that edges with shorter distances relative to the average distance will be favored, while still taking into account the centrality of the nodes.

```python
import numpy as np

def scoring_function(distance_matrix: np.ndarray) -> np.ndarray:
    """
    The heuristic measures indicate how promising is each edge before actually solving this TSP instance.
    
    Parameters
    ----------
    distance_matrix : np.ndarray
        The distance matrix of shape (n_nodes, n_nodes), where diagonal elements are set to inf.
    
    Returns
    -------
    heuristics: np.ndarray
        The heuristic measures of shape (n_nodes, n_nodes) for all edges. 
    """
    n_nodes = distance_matrix.shape[0]
    
    # Initialize the heuristic measures matrix
    heuristics = np.zeros((n_nodes, n_nodes))
    
    # Compute the total centrality of each node
    inverse_distances = 1 / distance_matrix
    np.fill_diagonal(inverse_distances, 0)
    total_centrality = np.sum(inverse_distances, axis=1) / np.sum(inverse_distances)
    
    # Calculate the average distance in the distance matrix
    average_distance = np.mean(distance_matrix[distance_matrix != np.inf])
    
    # Calculate the heuristic measure for each edge
    for i in range(n_nodes):
        for j in range(n_nodes):
            if i != j:
                ratio = distance_matrix[i, j] / average_distance
                heuristics[i, j] = ratio * total_centrality[i]
    
    # Normalize the heuristic measures so that they sum up to 1
    heuristics /= np.sum(heuristics)
    
    return heuristics
```
In this improved scoring function, I have made the following modifications:
1. Removed the penalty factor based on the number of connections (Algorithm 2).
2. Introduced the calculation of the average distance in the distance matrix.
3. Replaced the penalty factor in Algorithm 2 with the ratio of edge distance to the average distance.
4. The ratio is multiplied by the centrality measure to obtain the final heuristic measure for each edge.
5. The heuristic measures are normalized to sum up to 1.
